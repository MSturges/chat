type Message {
  id: ID! # unique id for message
  to: ChatGroup! # group message was sent in
  from: User! # user who sent the message
  message: String! # message text
  createdAt: Date! # when message was created
}

# graphql subscriptions for event based pubsub
# type Subscription {
#   # Subscription fires on every message added
#   # for any of the groups with one of these groupIds
#   messageAdded(userId: Int, groupIds: [Int]): Message
# }

type Mutation {
  # send a message to a group
  createMessage(message: String!, userId: ID!, groupId: ID!): Message
}
